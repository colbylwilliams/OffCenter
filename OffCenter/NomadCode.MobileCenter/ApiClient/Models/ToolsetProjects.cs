// Code generated by Microsoft (R) AutoRest Code Generator 0.16.0.0
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.

namespace NomadCode.MobileCenter.Models
{
    using System;
    using System.Linq;
    using System.Collections.Generic;
    using Newtonsoft.Json;
    using Microsoft.Rest;
    using Microsoft.Rest.Serialization;

    /// <summary>
    /// A collection of projects for each type of toolset
    /// </summary>
    public partial class ToolsetProjects
    {
        /// <summary>
        /// Initializes a new instance of the ToolsetProjects class.
        /// </summary>
        public ToolsetProjects() { }

        /// <summary>
        /// Initializes a new instance of the ToolsetProjects class.
        /// </summary>
        public ToolsetProjects(IList<XcodeSchemeContainer> xcode = default(IList<XcodeSchemeContainer>), IList<string> javascript = default(IList<string>), IList<XamarinSolution> xamarin = default(IList<XamarinSolution>), AndroidProject android = default(AndroidProject))
        {
            Xcode = xcode;
            Javascript = javascript;
            Xamarin = xamarin;
            Android = android;
        }

        /// <summary>
        /// Xcode projects, with their schemes
        /// </summary>
        [JsonProperty(PropertyName = "xcode")]
        public IList<XcodeSchemeContainer> Xcode { get; set; }

        /// <summary>
        /// package.json filess
        /// </summary>
        [JsonProperty(PropertyName = "javascript")]
        public IList<string> Javascript { get; set; }

        /// <summary>
        /// Xamarin solutions
        /// </summary>
        [JsonProperty(PropertyName = "xamarin")]
        public IList<XamarinSolution> Xamarin { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "android")]
        public AndroidProject Android { get; set; }

        /// <summary>
        /// Validate the object. Throws ValidationException if validation fails.
        /// </summary>
        public virtual void Validate()
        {
            if (this.Xcode != null)
            {
                foreach (var element in this.Xcode)
                {
                    if (element != null)
                    {
                        element.Validate();
                    }
                }
            }
            if (this.Xamarin != null)
            {
                foreach (var element1 in this.Xamarin)
                {
                    if (element1 != null)
                    {
                        element1.Validate();
                    }
                }
            }
            if (this.Android != null)
            {
                this.Android.Validate();
            }
        }
    }
}
