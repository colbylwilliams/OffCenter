// Code generated by Microsoft (R) AutoRest Code Generator 0.16.0.0
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.

namespace NomadCode.MobileCenter.Models
{
    using System;
    using System.Linq;
    using System.Collections.Generic;
    using Newtonsoft.Json;
    using Microsoft.Rest;
    using Microsoft.Rest.Serialization;

    /// <summary>
    /// Summary of a single test series
    /// </summary>
    public partial class TestSeries
    {
        /// <summary>
        /// Initializes a new instance of the TestSeries class.
        /// </summary>
        public TestSeries() { }

        /// <summary>
        /// Initializes a new instance of the TestSeries class.
        /// </summary>
        public TestSeries(string slug, string name, string mostRecentActivity = default(string), IList<TestRunSummary> testRuns = default(IList<TestRunSummary>))
        {
            Slug = slug;
            Name = name;
            MostRecentActivity = mostRecentActivity;
            TestRuns = testRuns;
        }

        /// <summary>
        /// Unique, human-readable identifier of the test series
        /// </summary>
        [JsonProperty(PropertyName = "slug")]
        public string Slug { get; set; }

        /// <summary>
        /// Name of the test series
        /// </summary>
        [JsonProperty(PropertyName = "name")]
        public string Name { get; set; }

        /// <summary>
        /// Date of the latest test run that used this test series
        /// </summary>
        [JsonProperty(PropertyName = "mostRecentActivity")]
        public string MostRecentActivity { get; set; }

        /// <summary>
        /// Most recent test runs
        /// </summary>
        [JsonProperty(PropertyName = "testRuns")]
        public IList<TestRunSummary> TestRuns { get; set; }

        /// <summary>
        /// Validate the object. Throws ValidationException if validation fails.
        /// </summary>
        public virtual void Validate()
        {
            if (Slug == null)
            {
                throw new ValidationException(ValidationRules.CannotBeNull, "Slug");
            }
            if (Name == null)
            {
                throw new ValidationException(ValidationRules.CannotBeNull, "Name");
            }
        }
    }
}
