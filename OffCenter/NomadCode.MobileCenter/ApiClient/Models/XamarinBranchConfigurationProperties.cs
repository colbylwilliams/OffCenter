// Code generated by Microsoft (R) AutoRest Code Generator 0.16.0.0
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.

namespace NomadCode.MobileCenter.Models
{
    using System;
    using System.Linq;
    using System.Collections.Generic;
    using Newtonsoft.Json;
    using Microsoft.Rest;
    using Microsoft.Rest.Serialization;

    /// <summary>
    /// Build configuration for Xamarin projects
    /// </summary>
    public partial class XamarinBranchConfigurationProperties
    {
        /// <summary>
        /// Initializes a new instance of the
        /// XamarinBranchConfigurationProperties class.
        /// </summary>
        public XamarinBranchConfigurationProperties() { }

        /// <summary>
        /// Initializes a new instance of the
        /// XamarinBranchConfigurationProperties class.
        /// </summary>
        public XamarinBranchConfigurationProperties(string slnPath, string isSimBuild, string args, string configuration, string p12File, string p12Pwd, string provProfile)
        {
            SlnPath = slnPath;
            IsSimBuild = isSimBuild;
            Args = args;
            Configuration = configuration;
            P12File = p12File;
            P12Pwd = p12Pwd;
            ProvProfile = provProfile;
        }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "slnPath")]
        public string SlnPath { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "isSimBuild")]
        public string IsSimBuild { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "args")]
        public string Args { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "configuration")]
        public string Configuration { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "p12File")]
        public string P12File { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "p12Pwd")]
        public string P12Pwd { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "provProfile")]
        public string ProvProfile { get; set; }

        /// <summary>
        /// Validate the object. Throws ValidationException if validation fails.
        /// </summary>
        public virtual void Validate()
        {
            if (SlnPath == null)
            {
                throw new ValidationException(ValidationRules.CannotBeNull, "SlnPath");
            }
            if (IsSimBuild == null)
            {
                throw new ValidationException(ValidationRules.CannotBeNull, "IsSimBuild");
            }
            if (Args == null)
            {
                throw new ValidationException(ValidationRules.CannotBeNull, "Args");
            }
            if (Configuration == null)
            {
                throw new ValidationException(ValidationRules.CannotBeNull, "Configuration");
            }
            if (P12File == null)
            {
                throw new ValidationException(ValidationRules.CannotBeNull, "P12File");
            }
            if (P12Pwd == null)
            {
                throw new ValidationException(ValidationRules.CannotBeNull, "P12Pwd");
            }
            if (ProvProfile == null)
            {
                throw new ValidationException(ValidationRules.CannotBeNull, "ProvProfile");
            }
        }
    }
}
