// Code generated by Microsoft (R) AutoRest Code Generator 0.16.0.0
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.

namespace NomadCode.MobileCenter.Models
{
    using System;
    using System.Linq;
    using System.Collections.Generic;
    using Newtonsoft.Json;
    using Microsoft.Rest;
    using Microsoft.Rest.Serialization;

    public partial class AppVersion
    {
        /// <summary>
        /// Initializes a new instance of the AppVersion class.
        /// </summary>
        public AppVersion() { }

        /// <summary>
        /// Initializes a new instance of the AppVersion class.
        /// </summary>
        public AppVersion(string appVersionId, string appId, string displayName, string appVersionProperty, string buildNumber = default(string))
        {
            AppVersionId = appVersionId;
            AppId = appId;
            DisplayName = displayName;
            AppVersionProperty = appVersionProperty;
            BuildNumber = buildNumber;
        }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "app_version_id")]
        public string AppVersionId { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "app_id")]
        public string AppId { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "display_name")]
        public string DisplayName { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "app_version")]
        public string AppVersionProperty { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "build_number")]
        public string BuildNumber { get; set; }

        /// <summary>
        /// Validate the object. Throws ValidationException if validation fails.
        /// </summary>
        public virtual void Validate()
        {
            if (AppVersionId == null)
            {
                throw new ValidationException(ValidationRules.CannotBeNull, "AppVersionId");
            }
            if (AppId == null)
            {
                throw new ValidationException(ValidationRules.CannotBeNull, "AppId");
            }
            if (DisplayName == null)
            {
                throw new ValidationException(ValidationRules.CannotBeNull, "DisplayName");
            }
            if (AppVersionProperty == null)
            {
                throw new ValidationException(ValidationRules.CannotBeNull, "AppVersionProperty");
            }
        }
    }
}
