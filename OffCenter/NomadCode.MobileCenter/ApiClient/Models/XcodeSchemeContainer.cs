// Code generated by Microsoft (R) AutoRest Code Generator 0.16.0.0
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.

namespace NomadCode.MobileCenter.Models
{
    using System;
    using System.Linq;
    using System.Collections.Generic;
    using Newtonsoft.Json;
    using Microsoft.Rest;
    using Microsoft.Rest.Serialization;

    public partial class XcodeSchemeContainer
    {
        /// <summary>
        /// Initializes a new instance of the XcodeSchemeContainer class.
        /// </summary>
        public XcodeSchemeContainer() { }

        /// <summary>
        /// Initializes a new instance of the XcodeSchemeContainer class.
        /// </summary>
        public XcodeSchemeContainer(string path, IList<XcodeScheme> sharedSchemes, string podfilePath = default(string))
        {
            Path = path;
            SharedSchemes = sharedSchemes;
            PodfilePath = podfilePath;
        }

        /// <summary>
        /// Path to project
        /// </summary>
        [JsonProperty(PropertyName = "path")]
        public string Path { get; set; }

        /// <summary>
        /// Project schemes
        /// </summary>
        [JsonProperty(PropertyName = "sharedSchemes")]
        public IList<XcodeScheme> SharedSchemes { get; set; }

        /// <summary>
        /// Path to CococaPods file, if present
        /// </summary>
        [JsonProperty(PropertyName = "podfilePath")]
        public string PodfilePath { get; set; }

        /// <summary>
        /// Validate the object. Throws ValidationException if validation fails.
        /// </summary>
        public virtual void Validate()
        {
            if (Path == null)
            {
                throw new ValidationException(ValidationRules.CannotBeNull, "Path");
            }
            if (SharedSchemes == null)
            {
                throw new ValidationException(ValidationRules.CannotBeNull, "SharedSchemes");
            }
            if (this.SharedSchemes != null)
            {
                foreach (var element in this.SharedSchemes)
                {
                    if (element != null)
                    {
                        element.Validate();
                    }
                }
            }
        }
    }
}
