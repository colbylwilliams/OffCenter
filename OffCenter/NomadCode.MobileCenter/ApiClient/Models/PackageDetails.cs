// Code generated by Microsoft (R) AutoRest Code Generator 0.16.0.0
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.

namespace NomadCode.MobileCenter.Models
{
    using System;
    using System.Linq;
    using System.Collections.Generic;
    using Newtonsoft.Json;
    using Microsoft.Rest;
    using Microsoft.Rest.Serialization;

    /// <summary>
    /// Details of an uploaded package
    /// </summary>
    public partial class PackageDetails
    {
        /// <summary>
        /// Initializes a new instance of the PackageDetails class.
        /// </summary>
        public PackageDetails() { }

        /// <summary>
        /// Initializes a new instance of the PackageDetails class.
        /// </summary>
        public PackageDetails(string packageId = default(string), string status = default(string), string appName = default(string), string version = default(string), string shortVersion = default(string), string releaseNotes = default(string), string provisioningProfileName = default(string), double? size = default(double?), string minOs = default(string), string fingerprint = default(string), string uploadedAt = default(string), string downloadUrl = default(string), string appIconUrl = default(string), string installUrl = default(string), IList<DistributionGroup> distributionGroups = default(IList<DistributionGroup>))
        {
            PackageId = packageId;
            Status = status;
            AppName = appName;
            Version = version;
            ShortVersion = shortVersion;
            ReleaseNotes = releaseNotes;
            ProvisioningProfileName = provisioningProfileName;
            Size = size;
            MinOs = minOs;
            Fingerprint = fingerprint;
            UploadedAt = uploadedAt;
            DownloadUrl = downloadUrl;
            AppIconUrl = appIconUrl;
            InstallUrl = installUrl;
            DistributionGroups = distributionGroups;
        }

        /// <summary>
        /// ID identifying this unique package.
        /// </summary>
        [JsonProperty(PropertyName = "package_id")]
        public string PackageId { get; set; }

        /// <summary>
        /// OBSOLETE. Will be removed in next version. The availability
        /// concept is now replaced with distributed. Any 'available' package
        /// will be associated with the default distribution group of an
        /// app.&lt;/br&gt;
        /// The package state.&lt;br&gt;
        /// &lt;b&gt;available&lt;/b&gt;: The uploaded package has been
        /// distributed.&lt;br&gt;
        /// &lt;b&gt;unavailable&lt;/b&gt;: The uploaded package is not
        /// visible to the user. &lt;br&gt;
        /// . Possible values include: 'available', 'unavailable'
        /// </summary>
        [JsonProperty(PropertyName = "status")]
        public string Status { get; set; }

        /// <summary>
        /// The app's name (extracted from the uploaded package).
        /// </summary>
        [JsonProperty(PropertyName = "app_name")]
        public string AppName { get; set; }

        /// <summary>
        /// The package's version.&lt;br&gt;
        /// For iOS: CFBundleVersion from info.plist.
        /// For Android: android:versionCode from AppManifest.xml.
        /// </summary>
        [JsonProperty(PropertyName = "version")]
        public string Version { get; set; }

        /// <summary>
        /// The package's short version.&lt;br&gt;
        /// For iOS: CFBundleShortVersionString from info.plist.
        /// For Android: android:versionName from AppManifest.xml.
        /// </summary>
        [JsonProperty(PropertyName = "short_version")]
        public string ShortVersion { get; set; }

        /// <summary>
        /// The package's release notes.
        /// </summary>
        [JsonProperty(PropertyName = "release_notes")]
        public string ReleaseNotes { get; set; }

        /// <summary>
        /// The package's release notes.
        /// </summary>
        [JsonProperty(PropertyName = "provisioning_profile_name")]
        public string ProvisioningProfileName { get; set; }

        /// <summary>
        /// The package's size in bytes.
        /// </summary>
        [JsonProperty(PropertyName = "size")]
        public double? Size { get; set; }

        /// <summary>
        /// The package's minimum required operating system.
        /// </summary>
        [JsonProperty(PropertyName = "min_os")]
        public string MinOs { get; set; }

        /// <summary>
        /// MD5 checksum of the package binary.
        /// </summary>
        [JsonProperty(PropertyName = "fingerprint")]
        public string Fingerprint { get; set; }

        /// <summary>
        /// UTC time in ISO 8601 format of the uploaded time.
        /// </summary>
        [JsonProperty(PropertyName = "uploaded_at")]
        public string UploadedAt { get; set; }

        /// <summary>
        /// The URL that hosts the binary for this package.
        /// </summary>
        [JsonProperty(PropertyName = "download_url")]
        public string DownloadUrl { get; set; }

        /// <summary>
        /// A URL to the app's icon.
        /// </summary>
        [JsonProperty(PropertyName = "app_icon_url")]
        public string AppIconUrl { get; set; }

        /// <summary>
        /// The href required to install a package on a mobile device. On iOS
        /// devices will be prefixed with
        /// `itms-services://?action=download-manifest&amp;url=`
        /// </summary>
        [JsonProperty(PropertyName = "install_url")]
        public string InstallUrl { get; set; }

        /// <summary>
        /// a list of distribution groups that are associated with this
        /// package.
        /// </summary>
        [JsonProperty(PropertyName = "distribution_groups")]
        public IList<DistributionGroup> DistributionGroups { get; set; }

    }
}
