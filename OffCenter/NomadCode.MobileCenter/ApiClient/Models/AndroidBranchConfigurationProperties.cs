// Code generated by Microsoft (R) AutoRest Code Generator 0.16.0.0
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.

namespace NomadCode.MobileCenter.Models
{
    using System;
    using System.Linq;
    using System.Collections.Generic;
    using Newtonsoft.Json;
    using Microsoft.Rest;
    using Microsoft.Rest.Serialization;

    /// <summary>
    /// Build configuration for Android projects
    /// </summary>
    public partial class AndroidBranchConfigurationProperties
    {
        /// <summary>
        /// Initializes a new instance of the
        /// AndroidBranchConfigurationProperties class.
        /// </summary>
        public AndroidBranchConfigurationProperties() { }

        /// <summary>
        /// Initializes a new instance of the
        /// AndroidBranchConfigurationProperties class.
        /// </summary>
        public AndroidBranchConfigurationProperties(string module, string variant, string gradleWrapperPath = default(string), bool? runTests = default(bool?), bool? runLint = default(bool?))
        {
            GradleWrapperPath = gradleWrapperPath;
            Module = module;
            Variant = variant;
            RunTests = runTests;
            RunLint = runLint;
        }

        /// <summary>
        /// Path to the Gradle wrapper script
        /// </summary>
        [JsonProperty(PropertyName = "gradleWrapperPath")]
        public string GradleWrapperPath { get; set; }

        /// <summary>
        /// The Gradle module to build
        /// </summary>
        [JsonProperty(PropertyName = "module")]
        public string Module { get; set; }

        /// <summary>
        /// The Android build variant to build
        /// </summary>
        [JsonProperty(PropertyName = "variant")]
        public string Variant { get; set; }

        /// <summary>
        /// Whether to run unit tests during the build (default)
        /// </summary>
        [JsonProperty(PropertyName = "runTests")]
        public bool? RunTests { get; set; }

        /// <summary>
        /// Whether to run lint checks during the build (default)
        /// </summary>
        [JsonProperty(PropertyName = "runLint")]
        public bool? RunLint { get; set; }

        /// <summary>
        /// Validate the object. Throws ValidationException if validation fails.
        /// </summary>
        public virtual void Validate()
        {
            if (Module == null)
            {
                throw new ValidationException(ValidationRules.CannotBeNull, "Module");
            }
            if (Variant == null)
            {
                throw new ValidationException(ValidationRules.CannotBeNull, "Variant");
            }
        }
    }
}
