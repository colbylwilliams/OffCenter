// Code generated by Microsoft (R) AutoRest Code Generator 0.16.0.0
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.

namespace NomadCode.MobileCenter.Models
{
    using System;
    using System.Linq;
    using System.Collections.Generic;
    using Newtonsoft.Json;
    using Microsoft.Rest;
    using Microsoft.Rest.Serialization;

    public partial class Crash
    {
        /// <summary>
        /// Initializes a new instance of the Crash class.
        /// </summary>
        public Crash() { }

        /// <summary>
        /// Initializes a new instance of the Crash class.
        /// </summary>
        public Crash(string crashId, DateTime timestamp, string version, string build, string device, string osVersion, string userName, string displayId = default(string), string userEmail = default(string))
        {
            CrashId = crashId;
            DisplayId = displayId;
            Timestamp = timestamp;
            Version = version;
            Build = build;
            Device = device;
            OsVersion = osVersion;
            UserName = userName;
            UserEmail = userEmail;
        }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "crash_id")]
        public string CrashId { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "display_id")]
        public string DisplayId { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "timestamp")]
        public DateTime Timestamp { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "version")]
        public string Version { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "build")]
        public string Build { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "device")]
        public string Device { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "os_version")]
        public string OsVersion { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "user_name")]
        public string UserName { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "user_email")]
        public string UserEmail { get; set; }

        /// <summary>
        /// Validate the object. Throws ValidationException if validation fails.
        /// </summary>
        public virtual void Validate()
        {
            if (CrashId == null)
            {
                throw new ValidationException(ValidationRules.CannotBeNull, "CrashId");
            }
            if (Version == null)
            {
                throw new ValidationException(ValidationRules.CannotBeNull, "Version");
            }
            if (Build == null)
            {
                throw new ValidationException(ValidationRules.CannotBeNull, "Build");
            }
            if (Device == null)
            {
                throw new ValidationException(ValidationRules.CannotBeNull, "Device");
            }
            if (OsVersion == null)
            {
                throw new ValidationException(ValidationRules.CannotBeNull, "OsVersion");
            }
            if (UserName == null)
            {
                throw new ValidationException(ValidationRules.CannotBeNull, "UserName");
            }
        }
    }
}
